define(["exports", "../components/playerSkins.js"], function (a, b) { "use strict"; Object.defineProperty(a, "__esModule", { value: !0 }), a.UI_PANEL = void 0; a.UI_PANEL = class { constructor(a, c, d, e, f) { this.scene = a, this.background = a.add.rectangle(a.game.config.width / 2, a.game.config.height / 2, 400, 800, 52479, .5), this.createContainer(), this.player = a.scene.get("mainScene").player, this.playerGold = this.player.coins; var g = new b.PlayerSkins(this); g.skins.forEach(a => { this.addNewTimber(a.name, a.cost, a.color) }), this.allowToBuy = !0 } createContainer() { var a = this, b = this.scene; this.container = b.add.container(b.game.config.width / 2, b.game.config.height / 2), this.container.setSize(400, 800); var c = b.add.graphics(this.container.x, this.container.y).clear().fillStyle(65535, 0).fillRect(this.container.x - this.container.width / 2, this.container.y - this.container.height / 2, this.container.width, this.container.height), d = this.container.createGeometryMask(c); this.container.setMask(d), b.input.on("pointermove", function (b) { if (b.isDown) { a.allowToBuy = !1; var c = a.container.getAt(0), d = a.container.getAt(2), e = a.container.getAt(a.container.length - 1), f = b.position.y - b.prevPosition.y; a.container.each(a => { 0 < f && -100 > c.y && (a.y += f), 0 > f && -100 < e.y && (a.y += f) }), c.setY(d.y) } else a.allowToBuy = !0 }) } addNewitem(a) { var b = this, c = []; b.container.each(a => { "Text" != a.type && c.push(a) }); var d = c[c.length - 1], e = -180, f = -380; d && (30 < d.x ? f = d.y + 200 : (e = d.x + 140, f = d.y)); var g = b.scene.add.rectangle(e, f, 82, 128, a.color).setOrigin(0).setInteractive(); g.data = a; var h = b.scene.add.text(e + 42, f + 164, "".concat(a.name, "\nCost: ").concat(a.cost), { align: "center", lineSpacing: 0 }).setOrigin(.5); g.data.text = h, g.on("pointerup", function () { !0 == b.allowToBuy && g.data.cb() }), b.container.add([g, h]) } addNewTimber(a, b, c) { var d = this, e = { name: a, cost: b, color: c, bought: !1, used: !1 }; e.cb = function () { this.bought || (d.playerGold >= this.cost ? (console.log("You have just bought ".concat(this.name, " for ").concat(this.cost)), this.bough = !0, d.playerGold -= this.cost, d.player.ownedSkins.push({})) : console.log("You need ".concat(this.cost - d.playerGold, " more money!"))) }, this.addNewitem(e) } } });